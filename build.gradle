buildscript {
    repositories {
        gradlePluginPortal()
    }
    dependencies {
    }
}

plugins {
    id "java"
    id "maven-publish"
    id "idea"
    id "eclipse"
    id "jacoco"
    id "org.springframework.boot"
    id "com.google.cloud.tools.jib"
    id "com.gorylenko.gradle-git-properties"
    id "org.liquibase.gradle"
    id "org.sonarqube"
    id "io.spring.nohttp"
    id "com.github.andygoossens.gradle-modernizer-plugin"
}

group = "com.codexd.aplv"
version = "0.0.1-SNAPSHOT"

description = ""

sourceCompatibility=11
targetCompatibility=11
assert System.properties["java.specification.version"] == "11" || "12" || "13" || "14" || "15" || "16" || "17" || "18"


if (project.hasProperty("prod")) {
    apply from: "gradle/profile_prod.gradle"
} else {
    apply from: "gradle/profile_dev.gradle"
}

if (project.hasProperty("war")) {
    apply from: "gradle/war.gradle"
}

defaultTasks "bootRun"

springBoot {
    mainClass = "com.codexd.aplv.AplvApp"
}

test {
    useJUnitPlatform()
    exclude "**/*IT*", "**/*IntTest*"
    testLogging {
        events 'FAILED', 'SKIPPED'
    }
    jvmArgs += '-Djava.security.egd=file:/dev/./urandom -Xmx512m'
    reports.html.enabled = false

    if (JavaVersion.current().isCompatibleWith(JavaVersion.VERSION_13)) {
        jvmArgs += [
                "-XX:+AllowRedefinitionToAddDeleteMethods"
        ]
    }
}

modernizer {
    failOnViolations = true
    includeTestClasses = true
}

check.dependsOn integrationTest
task testReport(type: TestReport) {
    destinationDir = file("$buildDir/reports/tests")
    reportOn test
}

task integrationTestReport(type: TestReport) {
    destinationDir = file("$buildDir/reports/tests")
    reportOn integrationTest
}

gitProperties {
    failOnNoGitDirectory = false
    keys = ["git.branch", "git.commit.id.abbrev", "git.commit.id.describe"]
}

nohttp {
    source.include "build.gradle", "README.md"
}

configurations {
    providedRuntime
    implementation.exclude module: "spring-boot-starter-tomcat"
    all {
        resolutionStrategy {
            // Inherited version from Spring Boot can't be used because of regressions:
            // To be removed as soon as spring-boot use the same version
            force 'org.liquibase:liquibase-core:4.15.0'
        }
    }
}

repositories {
    // mavenLocal()
    mavenCentral()
}

dependencies {
    implementation "javax.annotation:javax.annotation-api:1.3.2"
    implementation "com.fasterxml.jackson.module:jackson-module-jaxb-annotations"
    implementation "commons-beanutils:commons-beanutils:${commonsBeanutilsVersion}"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-hppc"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
    testImplementation "org.testcontainers:junit-jupiter"
    testImplementation "org.testcontainers:testcontainers"
    implementation "org.springdoc:springdoc-openapi-webflux-core:1.6.11"
    implementation "com.zaxxer:HikariCP:4.0.3"
    implementation "org.apache.commons:commons-lang3:3.12.0"
    annotationProcessor "org.hibernate:hibernate-jpamodelgen:${hibernateVersion}"
    implementation "org.hibernate:hibernate-core:5.6.10.Final"
    implementation "org.hibernate.validator:hibernate-validator:6.2.4.Final"
    implementation "org.liquibase:liquibase-core:4.15.0"
    liquibaseRuntime "org.liquibase:liquibase-core:4.15.0"
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-loader-tools:2.7.3"
    implementation "org.springframework.boot:spring-boot-starter-actuator:2.7.3"
    implementation "org.springframework.boot:spring-boot-starter-data-r2dbc:2.7.3"
    testImplementation "org.testcontainers:jdbc"
    implementation "org.springframework.boot:spring-boot-starter-validation:2.7.3"
    implementation "org.springframework.data:spring-data-commons"
    runtimeOnly "io.netty:netty-tcnative-boringssl-static:2.0.53.Final"
    implementation "org.springframework.boot:spring-boot-starter-logging:2.7.3"
    implementation "org.springframework.boot:spring-boot-starter-mail:2.7.3"
    implementation "org.springframework.boot:spring-boot-starter-security:2.7.3"
    implementation "org.springframework.boot:spring-boot-starter-thymeleaf:2.7.3"
    implementation "org.springframework.boot:spring-boot-starter-webflux:2.7.3"
    testImplementation "org.springframework.boot:spring-boot-starter-test:2.7.3"
    testImplementation "org.springframework.boot:spring-boot-test:2.7.3"
    testImplementation "org.springframework.security:spring-security-test:5.7.3"
    testImplementation "io.projectreactor.tools:blockhound-junit-platform:${blockhoundJunitPlatformVersion}"
    testRuntimeOnly "org.junit.platform:junit-platform-launcher:${junitPlatformLauncherVersion}"
    testImplementation "com.tngtech.archunit:archunit-junit5-api:${archunitJunit5Version}"
    testRuntimeOnly "com.tngtech.archunit:archunit-junit5-engine:${archunitJunit5Version}"
    implementation "org.zalando:problem-spring-webflux:0.27.0"
    implementation "io.jsonwebtoken:jjwt-api:0.11.5"
    implementation "io.jsonwebtoken:jjwt-impl:0.11.5"
    implementation "io.jsonwebtoken:jjwt-jackson:0.11.5"
    implementation "org.springframework.cloud:spring-cloud-starter:3.1.3"
    implementation "org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j:2.1.3"
    implementation "com.playtika.reactivefeign:feign-reactor-webclient:3.2.5"
    implementation "com.playtika.reactivefeign:feign-reactor-cloud:3.2.5"
    implementation "com.playtika.reactivefeign:feign-reactor-spring-configuration:3.2.5"
    implementation "org.springframework.retry:spring-retry:1.3.1"
    implementation "org.springframework.cloud:spring-cloud-starter-openfeign:3.1.3"
    implementation "io.micrometer:micrometer-registry-prometheus:1.9.3"
    implementation "io.dropwizard.metrics:metrics-core:4.2.11"
    implementation 'net.logstash.logback:logstash-logback-encoder:7.3'
    liquibaseRuntime sourceSets.main.compileClasspath
    OperatingSystem os = org.gradle.nativeplatform.platform.internal.DefaultNativePlatform.getCurrentOperatingSystem();
    Architecture arch = org.gradle.nativeplatform.platform.internal.DefaultNativePlatform.getCurrentArchitecture();
    if (os.isMacOsX() && !arch.isAmd64()) {
        implementation("io.netty:netty-resolver-dns-native-macos") {
            artifact {
                classifier = "osx-aarch_64"
            }
        }
    }
}

task cleanResources(type: Delete) {
    delete "build/resources"
}

wrapper {
    gradleVersion = "7.4.2"
}


compileJava.dependsOn processResources
processResources.dependsOn bootBuildInfo
